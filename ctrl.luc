module ctrl (
    input clk,  // clock
    input rst,  // reset
    output regfile_write_address[4],
    output regfile_read_address_a[4],
    output regfile_read_address_b[4],
    output we_regfile,
  ) {
  
  // Register
  const REG_RND   = 4b1100   //random number register
  const REG_TIMER = 4b1101   //timer register
  const REG_TEMP  = 4b1110   //temp register

  .clk(clk){
    fsm game_fsm={
      START,
      
    };


  }
  
  always {

    // standard setting unless otherwise overwritten by each case 
    we_regfile = 0;
    regfile_write_address = 1111;
    regfile_read_address_a = 0000;
    regfile_read_address_b = 0000;
      
    if (rst){
      game_fsm.d = game_fsm.START;
    } else {
      case(game_fsm.q){
        game_fsm.START:
        
      }
    }
  }
}